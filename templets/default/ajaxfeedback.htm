<!-- //主模板必须要引入{dede:global.cfg_cmsurl/}/include/dedeajax2.js -->
<!-- //评论内容区 -->
<a name='commettop'></a>
<div class="mt1">
	<dl class="tbox slide-mask-r" id="slide-box">
		<!-- //这两个ID的区块必须存在，否则JS会出错 -->
		<dd id='commetcontentNew'></dd>
		<dd id='commetcontent'></dd>
	</dl>
</div>

<div class="fillwidth-3"></div>

<!-- 评论表单弹出层 -->
<div class="comment-form-overlay" id="comment-overlay"></div>
<div class="comment-form-container" id="comment-form">
	<div class="dede_comment_post">
		<form action="#" method="post" name="feedback">
			<input type="hidden" name="dopost" value="send" />
			<input type="hidden" name="comtype" value="comments">
			<input type="hidden" name="aid" value="{dede:field name="id"/}" />
			<input type="hidden" name="fid" id='feedbackfid' value="0" />
			<div class="dcmp-content">
				<textarea cols="60" name="msg" rows="5" class="ipt-txt"></textarea>
			</div>
			<div class="dcmp-post">
				<div class="dcmp-userinfo" id="_ajax_feedback">
					<input type="text" name="username" size="16" class="ipt-txt" placeholder="昵称" style="text-transform:uppercase;" />
					<input type="text" name="validate" size="8" class="ipt-txt" placeholder="验证码" style="text-transform:uppercase;" />
					<img src="{dede:global.cfg_cmspath/}/include/vdimgck.php" id="validateimg" style="cursor:pointer" onclick="this.src=this.src+\'?\'" title="点击我更换图片" alt="点击我更换图片" />
					<input type="checkbox" name="notuser" id="dcmp-submit-guest" />
					<label for="dcmp-submit-guest" />匿名</label>
					{dede:php}
					if($cfg_mb_open=='Y') {
					echo '
					<script language="javascript" type="text/javascript">CheckLogin();</script>';
					}
					{/dede:php}
					<button type="button" onClick='PostComment()'>发表评论</button>
				</div>
			</div>
		</form>
	</div>
</div>

<script language='javascript'>
	// 评论表单弹出控制
	function initCommentForm() {
		const trigger = document.getElementById('comment-trigger');
		const form = document.getElementById('comment-form');
		const overlay = document.getElementById('comment-overlay');
		
		if (!trigger || !form || !overlay) return;

		// 点击评论按钮显示表单
		trigger.addEventListener('click', () => {
			form.classList.add('show');
			overlay.classList.add('show');
		});

		// 点击遮罩层关闭表单
		overlay.addEventListener('click', () => {
			form.classList.remove('show');
			overlay.classList.remove('show');
		});

		// 点击表单外部关闭表单
		document.addEventListener('click', (e) => {
			if (e.target === overlay) {
				form.classList.remove('show');
				overlay.classList.remove('show');
			}
		});
	}

	// 页面加载完成后初始化评论表单
	window.addEventListener('load', initCommentForm);

	function LoadCommets(page) {
		var taget_obj = document.getElementById('commetcontent');
		var waithtml = "<div style='line-height:50px'><img src='{dede:global.cfg_cmsurl/}/images/loadinglit.gif' />评论加载中...</div>";
		var myajax = new DedeAjax(taget_obj, true, true, '', 'x', waithtml);
		myajax.SendGet2("{dede:global.cfg_phpurl /}/feedback_ajax.php?dopost=getlist&aid={dede:field.id/}&page=" + page);
		DedeXHTTP = null;
	}
	function PostComment() {
		var f = document.feedback;
		var nface = '6';
		var nfeedbacktype = 'feedback';
		var nvalidate = '';
		var nnotuser = '';
		var nusername = '';
		var npwd = '';
		var taget_obj = $DE('commetcontentNew');
		var waithtml = "<div style='line-height:30px'><img src='{dede:global.cfg_cmsurl/}/images/loadinglit.gif' />正在发送中...</div>";
		if (f.msg.value == '') {
			alert("评论内容不能为空！");
			return;
		}
		if (f.validate) {
			if (f.validate.value == '') {
				alert("请填写验证码！");
				return;
			}
			else {
				nvalidate = f.validate.value;
			}
		}
		if (f.msg.value.length > 500) {
			alert("你的评论是不是太长了？请填写500字以内的评论。");
			return;
		}
		if (f.feedbacktype) {
			for (var i = 0; i < f.feedbacktype.length; i++)
				if (f.feedbacktype[i].checked) nfeedbacktype = f.feedbacktype[i].value;
		}
		if (f.face) {
			for (var j = 0; j < f.face.length; j++)
				if (f.face[j].checked) nface = f.face[j].value;
		}
		if (f.notuser.checked) nnotuser = '1';
		if (f.username) nusername = f.username.value;
		if (f.pwd) npwd = f.pwd.value;

		var myajax = new DedeAjax(taget_obj, false, true, '', '', waithtml);
		myajax.sendlang = '{dede:global.cfg_soft_lang/}';
		myajax.AddKeyN('dopost', 'send');
		myajax.AddKeyN('aid', '{dede:field.id/}');
		myajax.AddKeyN('fid', f.fid.value);
		myajax.AddKeyN('face', nface);
		myajax.AddKeyN('feedbacktype', nfeedbacktype);
		myajax.AddKeyN('validate', nvalidate);
		myajax.AddKeyN('notuser', nnotuser);
		myajax.AddKeyN('username', nusername);
		myajax.AddKeyN('pwd', npwd);
		myajax.AddKeyN('msg', f.msg.value);
		myajax.SendPost2('{dede:global.cfg_phpurl/}/feedback_ajax.php');
		f.msg.value = '';
		f.fid.value = 0;
		if (f.validate) {
			if ($DE('validateimg')) $DE('validateimg').src = "{dede:global.cfg_cmsurl/}/include/vdimgck.php?" + f.validate.value;
			f.validate.value = '';
		}
	}
	function quoteCommet(fid) {
		document.feedback.fid.value = fid;
	}
	LoadCommets(1);

	// 添加滚动效果
	function initScroll() {
		const container = document.getElementById('commetcontent');
		if (!container) return;

		const slideBox = document.getElementById('slide-box');
		if (!slideBox) return;

		const comments = container.querySelectorAll('.decmt-box2');
		if (!comments.length) return;

		// 检查内容是否超出容器宽度
		if (container.scrollWidth <= container.clientWidth) {
			return; // 如果内容长度不足，直接返回，不执行后续操作
		}

		let scrollPosition = 0;
		const scrollSpeed = 1; // 滚动速度，可以根据需要调整
		const gap = 16; // 评论之间的间距
		let isPaused = false; // 是否暂停滚动
		let animationFrameId = null; // 存储requestAnimationFrame的ID

		// 计算所有评论的总宽度（包括间距）
		let totalWidth = 0;
		comments.forEach((comment, index) => {
			totalWidth += comment.offsetWidth;
			if (index < comments.length - 1) {
				totalWidth += gap;
			}
		});

		function scroll() {
			if (isPaused) return;
			
			scrollPosition -= scrollSpeed;
			
			// 计算最后一个评论的右边界位置
			const lastComment = comments[comments.length - 1];
			const lastCommentRight = scrollPosition + totalWidth;
			
			// 当最后一个评论完全移出可视区域时，重置位置
			if (lastCommentRight <= 0) {
				scrollPosition = 0;
			}
			
			// 移动所有评论
			comments.forEach(comment => {
				comment.style.transform = `translateX(${scrollPosition}px)`;
			});
			
			animationFrameId = requestAnimationFrame(scroll);
		}

		// 添加鼠标事件监听
		container.addEventListener('mouseenter', () => {
			isPaused = true;
			if (animationFrameId) {
				cancelAnimationFrame(animationFrameId);
			}
		});

		container.addEventListener('mouseleave', () => {
			isPaused = false;
			scroll();
		});

		// 开始滚动
		slideBox.classList.add('slide-mask-l');
		scroll();
	}

	// 等待内容加载完成后初始化滚动
	window.addEventListener('load', initScroll);
</script><!-- //评论内容区结束 -->